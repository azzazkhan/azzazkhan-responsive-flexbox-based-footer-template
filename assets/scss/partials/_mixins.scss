@mixin transition($properties) {
	-webkit-transition: $properties;
	-moz-transition: $properties;
	transition: $properties;
}

@mixin transform($methods) {
	-webkit-transform: $methods;
	-moz-transform: $methods;
	transform: $methods;
}

@mixin box-sizing($sizing) {
	-webkit-box-sizing: $sizing;
	-moz-box-sizing: $sizing;
	-ms-box-sizing: $sizing;
	-o-box-sizing: $sizing;
	box-sizing: $sizing;
}

@mixin placeholder() {
	&::-webkit-input-placeholder { @content; }
	&::-moz-placeholder { @content; }
	&:-ms-input-placeholder { @content; }
	&:-moz-placeholder { @content; }
	&::placeholder { @content; }
}

@mixin scrollbar($property: null) {
	@if $property == null {
		&::-webkit-scrollbar { @content; }
		&::-moz-scrollbar { @content; }
		&::-ms-scrollbar { @content; }
		&::-o-scrollbar { @content; }
	} @else if $property == track {
		&::-webkit-scrollbar-#{$property} { @content; }
		&::-moz-scrollbar-#{$property} { @content; }
		&::-ms-scrollbar-#{$property} { @content; }
		&::-o-scrollbar-#{$property} { @content; }
	} @else if $property == thumb {
		&::-webkit-scrollbar-#{$property} { @content; }
		&::-moz-scrollbar-#{$property} { @content; }
		&::-ms-scrollbar-#{$property} { @content; }
		&::-o-scrollbar-#{$property} { @content; }
	} @else {
		&::-webkit-scrollbar-thumb:#{$property} { @content; }
		&::-moz-scrollbar-thumb:#{$property} { @content; }
		&::-ms-scrollbar-thumb:#{$property} { @content; }
		&::-o-scrollbar-thumb:#{$property} { @content; }
	}
}

@mixin text-shadow($y-axis: 1px, $x-axis: 1px, $blur: 2px, $color: rgba(0, 0, 0, 0.60)) { @include text-shadows($y-axis $x-axis $blur $color); }

@mixin text-shadows($shadow) {
	-webkit-text-shadow: $shadow;
	-moz-text-shadow: $shadow;
	text-shadow: $shadow;
}

@mixin box-shadow($x-axis: 0, $y-axis: 4, $blur: 4, $spread: 0, $color: rgba(0, 0, 0, 0.25)) { @include box-shadows($x-axis $y-axis $blur $spread $color); }

@mixin box-shadows($shadow) {
	-webkit-box-shadow: $shadow;
	-moz-box-shadow: $shadow;
	box-shadow: $shadow;
}

// color tint and shade

@function shade(
    $color,
    $percent
  ) {

  @return mix(#000000, $color, $percent);
}
@function tint(
    $color,
    $percent
  ) {

  @return mix(#FFFFFF, $color, $percent);
}

// border radius

@mixin border-radius($radius:.25em) {
  border-radius: $radius;
}

// antialiasing mode font rendering

@mixin font-smoothing {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

// clearfix

@mixin clearfix {
  &::after {
    clear: both;
    content: "";
    display: block;
  }
}